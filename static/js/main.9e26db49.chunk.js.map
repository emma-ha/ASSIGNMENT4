{"version":3,"sources":["components/AccountBalance.js","components/Home.js","components/UserProfile.js","components/Login.js","components/Credits.js","components/Debits.js","App.js","reportWebVitals.js","index.js"],"names":["AccountBalance","this","props","accountBalance","Component","Home","src","alt","to","UserProfile","userName","memberSince","LogIn","handleChange","e","updatedUser","state","user","target","value","setState","handleSubmit","preventDefault","mockLogIn","redirect","password","onSubmit","type","name","defaultValue","onChange","Credits","credits","map","date","slice","amount","description","id","addCredit","Date","toISOString","step","Debits","debits","debit","addDebit","App","d","update","Number","toFixed","us","push","c","credit","logInInfo","newUser","currentUser","debitList","creditList","a","totalDebit","totalCredit","API","axios","get","cAPI","dAPI","data","console","log","status","basename","exact","path","render","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9e26db49.chunk.js","sourcesContent":["/*==================================================\nsrc/components/AccountBalance.js\n\nThe AccountBalance component displays account balance. It is included in other page views.\n==================================================*/\nimport React, {Component} from 'react';\n\nclass AccountBalance extends Component {\n  // Display account balance\n  render() {\n    return (\n      <div>\n        Balance: {this.props.accountBalance}\n      </div>\n    );\n  }\n}\n\nexport default AccountBalance;","/*==================================================\nsrc/components/Home.js\n\nThe Home component is used to demonstrate the use of Link.\n==================================================*/\nimport React, {Component} from 'react';\nimport AccountBalance from './AccountBalance';\nimport {Link} from 'react-router-dom';\n\nclass Home extends Component {\n  render() {\n    return (\n      <div>\n        <img src=\"https://picsum.photos/200/200\" alt=\"bank\"/>\n\n        <h1>Bank of React</h1>\n\n        <Link to=\"/userProfile\">User Profile</Link>\n        <br/>\n        <Link to=\"/login\">Login</Link>\n        <br/>\n        <Link to=\"/credits\">Credits (to be implemented in the Assignment)</Link>\n        <br/>\n        <Link to=\"/debits\">Debits (to be implemented in the Assignment)</Link>\n        <br/><br/>\n        <AccountBalance accountBalance={this.props.accountBalance}/>\n      </div>\n    );\n  }\n}\n\nexport default Home;","/*==================================================\nsrc/components/UserProfile.js\n\nThe UserProfile component is used to demonstrate the use of Route and Link.\nNote: You don't need to work on this file for the Assignment.\n==================================================*/\nimport React, {Component} from 'react';\nimport {Link} from 'react-router-dom';\n\nclass UserProfile extends Component {\n  render() {\n    return (\n      <div>\n        <h1>User Profile</h1>\n\n        <div>Username: {this.props.userName}</div>\n        <div>Member Since: {this.props.memberSince}</div>\n        <br/>\n        <Link to=\"/\">Return to Home</Link>\n      </div>\n    );\n  }\n}\n\nexport default UserProfile;","/*==================================================\nsrc/components/Login.js\n\nThe LogIn component is used to demonstrate the use of Redirect.\nNote: You don't need to work on this file for the Assignment.\n==================================================*/\nimport React, { Component } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport {Link} from 'react-router-dom';\n\nclass LogIn extends Component {\n  constructor (props) {  // Create and initialize state\n    super(props)\n    this.state = {\n      user: {\n        //userName: '',\n        userName: this.props.user.userName,  // Initialize userName using props input (currentUser in App.js)\n        password: ''\n      },\n      redirect: false  // Redirect property used to trigger Redirect\n    }\n  }\n\n  // When User Name input is changed, capture the new input value and update state\n  handleChange = (e) => {\n    const updatedUser = {...this.state.user}  // Create an object for state\n    updatedUser.userName = e.target.value  // Set object's userName to the new input value\n    this.setState({user: updatedUser})  // Update state with object values\n  }\n\n  // When user clicked \"Log In\" button, store user data and then redirect to \"User Profile\" page\n  handleSubmit = (e) => {\n    e.preventDefault()\n    this.props.mockLogIn(this.state.user)  // Update state in the top-level component (App.js)\n    this.setState({redirect: true})  // Update state to trigger Redirect\n  }\n  \n  render () {\n    // Redirect to \"User Profile\" page when \"Log In\" button is clicked\n    if (this.state.redirect) {  \n      return (<Redirect to=\"/userProfile\"/>)\n    }\n\n    // Render the login form (and call \"handleSubmit\" method when \"Log In\" button is clicked to submit form)\n    return (\n      <div>\n        <h1>Login</h1>\n        \n        <form onSubmit={this.handleSubmit}>\n          <div>\n            <label>User Name</label>\n            <input type=\"text\" name=\"userName\" defaultValue={this.props.user.userName} onChange={this.handleChange} />\n          </div>\n          <div>\n            <label>Password</label>\n            <input type=\"password\" name=\"password\" />\n          </div>\n          <button>Log In</button>\n        </form>  \n        <br/>\n        <Link to=\"/\">Return to Home</Link>\n      </div>\n    )\n  }\n}\n\nexport default LogIn","/*==================================================\nsrc/components/Credits.js\n\nThe Credits component contains information for Credits page view.\nNote: You need to work on this file for the Assignment.\n==================================================*/\nimport {Link} from 'react-router-dom';\nimport AccountBalance from './AccountBalance';\n\nconst Credits = (props) => {\n  let creditsView = () => {\n    const { credits } = props;\n    return credits.map((credits) => {  // Extract \"id\", \"amount\", \"description\" and \"date\" properties of each debits JSON array element\n      let date = credits.date.slice(0,10);\n      return <li key={credits.id}>{credits.amount} {credits.description} {date}</li>\n    }) \n  }\n\n  const handleSubmit = (e) =>\n  {\n    e.preventDefault();\n    props.addCredit({ amount: e.target.amount.value, date: new Date().toISOString(),\n      description: e.target.description.value,}); //add to list\n  }\n  return (\n    <div>\n      <h1>Credits</h1> \n\n      {creditsView()}\n\n      <form onSubmit={e => {handleSubmit(e)} }>\n        <input type=\"text\" name=\"description\" />\n        <input type=\"number\" name=\"amount\" step =\"0.01\"/>\n        <button type=\"submit\">Add Credit</button>\n      </form>\n      <br/>\n      <AccountBalance accountBalance={props.accountBalance}/> \n      <br/>\n      <Link to=\"/\">Return to Home</Link>\n    </div>\n  )\n}\n\nexport default Credits;","/*==================================================\nsrc/components/Debits.js\n\nThe Debits component contains information for Debits page view.\nNote: You need to work on this file for the Assignment.\n==================================================*/\nimport {Link} from 'react-router-dom';\nimport AccountBalance from './AccountBalance';\n\nconst Debits = (props) => {\n  // Create the list of Debit items\n  let debitsView = () => {\n    const { debits } = props;\n    return debits.map((debit) => {  // Extract \"id\", \"amount\", \"description\" and \"date\" properties of each debits JSON array element\n      let date = debit.date.slice(0,10);\n      return <li key={debit.id}>{debit.amount} {debit.description} {date}</li>\n    }) \n  }\n\n  const handleSubmit = (e) =>\n  {\n    e.preventDefault();\n    props.addDebit({ amount: e.target.amount.value, date: new Date().toISOString(),\n      description: e.target.description.value,}); //add to list\n  }\n  // Render the list of Debit items and a form to input new Debit item\n  return (\n    <div>\n      <h1>Debits</h1>\n      <br/>\n      {debitsView()}\n\n      <form onSubmit={e => {handleSubmit(e)} }>\n        <input type=\"text\" name=\"description\" />\n        <input type=\"number\" name=\"amount\" step = \"0.01\" />\n        <button type=\"submit\">Add Debit</button>\n      </form>\n      <br/>\n      <AccountBalance accountBalance={props.accountBalance}/>\n      <br/>\n      <Link to=\"/\">Return to Home</Link>\n    </div>\n  )\n}\n\nexport default Debits;","/*==================================================\nsrc/App.js\n\nThis is the top-level component of the app.\nIt contains the top-level state.\n==================================================*/\nimport React, {Component} from 'react';\nimport {BrowserRouter as Router, Route} from 'react-router-dom';\nimport axios from 'axios';\n\n// Import other components\nimport Home from './components/Home';\nimport UserProfile from './components/UserProfile';\nimport LogIn from './components/Login';\nimport Credits from './components/Credits';\nimport Debits from './components/Debits';\n\nclass App extends Component {\n  constructor() {  \n    super(); \n    this.state = {\n      accountBalance: 1234567.89,\n      debitList: [],\n      creditList: [],\n      currentUser: {\n        userName: 'Joe Smith',\n        memberSince: '11/22/99',\n      }\n    }\n  }\n\n  async componentDidMount() \n  {\n    let totalDebit = 0;\n    let totalCredit = 0;\n    let API = 'https://moj-api.herokuapp.com/'; //API link\n    try \n    {\n      let cAPI = await axios.get(API + 'credits');\n      let dAPI = await axios.get(API + 'debits'); \n      this.setState({credits: cAPI.data}); //data into list\n      this.setState({debits: dAPI.data}); //data into list\n    }\n    catch (error) //error handling \n    {\n      if (error.cAPI) \n      {\n        console.log(error.cAPI.data);\n        console.log(error.cAPI.status);\n      }\n      else if(error.dAPI)\n      {\n        console.log(error.dAPI.data);\n        console.log(error.dAPI.status);\n      }\n    }\n    for (let c of this.state.credits) //adding credits\n    { \n      totalCredit = totalCredit + c.amount;\n    }\n    for (let d of this.state.debits) //subtracting debits \n    { \n      totalDebit = totalDebit - d.amount;\n    }\n    this.setState({accountBalance:((totalCredit + totalDebit)).toFixed(2)});\n  }\n\n  addDebit = (d) => //updating balance\n  {\n    let update = {\n      amount: Number(d.amount).toFixed(2),\n      date: d.date,\n      description: d.description,\n      id: d.id\n    }\n    let us = this.state.debits;\n    us.push(update);\n    this.setState({debit: us});\n    this.setState({accountBalance: (Number(this.state.accountBalance) - Number(d.amount)).toFixed(2)});\n  }\n\n  addCredit = (c) => //updating balance\n  {\n    let update = {\n      amount: Number(c.amount).toFixed(2),\n      date: c.date,\n      description: c.description,\n      id: c.id\n    }\n    let us = this.state.credits;\n    us.push(update);\n    this.setState({credit: us});\n    this.setState({accountBalance: (Number(this.state.accountBalance) + Number(c.amount)).toFixed(2)});\n  }\n\n\n\n  // Update state's currentUser (userName) after \"Log In\" button is clicked\n  mockLogIn = (logInInfo) => {  \n    const newUser = {...this.state.currentUser}\n    newUser.userName = logInInfo.userName\n    this.setState({currentUser: newUser})\n  }\n\n  // Create Routes and React elements to be rendered using React components\n  render() {  \n    // Create React elements and pass input props to components\n    const HomeComponent = () => (<Home accountBalance={this.state.accountBalance} />);\n    const UserProfileComponent = () => (\n      <UserProfile userName={this.state.currentUser.userName} memberSince={this.state.currentUser.memberSince} />\n    );\n    const LogInComponent = () => (<LogIn user={this.state.currentUser} mockLogIn={this.mockLogIn} />)\n    const DebitsComponent = () => (<Debits debits={this.state.debits} accountBalance={this.state.accountBalance} addDebit = {this.addDebit}/>) \n    const CreditsComponent = () => (<Credits credits={this.state.credits} accountBalance={this.state.accountBalance} addCredit = {this.addCredit}/>)\n    // Important: Include the \"basename\" in Router, which is needed for deploying the React app to GitHub Pages\n    return (\n      <Router basename=\"/ASSIGNMENT4\">\n        <div>\n          <Route exact path=\"/\" render={HomeComponent}/>\n          <Route exact path=\"/userProfile\" render={UserProfileComponent}/>\n          <Route exact path=\"/login\" render={LogInComponent}/>\n          <Route exact path=\"/credits\" render={CreditsComponent}/>\n          <Route exact path=\"/debits\" render={DebitsComponent}/>\n        </div>\n      </Router>\n    );\n  }\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","/*==================================================\nsrc/index.js\n\nThis file renders the top-level component App which contains all components of the app).\n==================================================*/\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n// Note: In above, StrictMode is a tool for highlighting potential problems in an application. \n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}